{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Techno-economic analysis of a biorefinery"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "TEA objects can perform cashflow analysis on a System object and arguments for cashflow analysis. These include arguments such as operating days, lang factor, and income tax, as well as arguments for taking into account startup operation, construction schedule, and capital cost financing."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Inhereting from TEA objects"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Depending on the rigour and flexibility of the techno-economic analysis, different parameters may be needed to calculate total depreciable capital (TDC), fixed capital investment (FCI), and fixed operating cost (FOC). For this reason, the TEA object is left as an *abstract class* with *abstract methods* `_TDC`, `_FCI`, and `_FOC`. Here is an example TEA subclass from the lipidcane biorefinery design for the co-production of ethanol and biodiesel:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import biosteam as bst\n",
    "\n",
    "class LipidcaneTEA(bst.TEA):\n",
    "    \"\"\"Create a TEA_lipidcane object for techno-economic analysis of a biorefinery [1]\n",
    "    \n",
    "    Parameters\n",
    "        \n",
    "        system: [System] Should contain feed and product streams.\n",
    "\n",
    "        IRR: [float]  Internal rate of return (fraction).\n",
    "\n",
    "        duration: tuple[int, int] Start and end year of venture (e.g. (2018, 2038)).\n",
    "\n",
    "        depreciation: [str] 'MACRS' + number of years (e.g. 'MACRS7').\n",
    "\n",
    "        operating_days: [float] Number of operating days per year.\n",
    "\n",
    "        income_tax: [float] Combined federal and state income tax rate (fraction).\n",
    "\n",
    "        lang_factor: [float] Lang factor for getting fixed capital investment from\n",
    "        total purchase cost. If no lang factor, estimate capital investment\n",
    "        using bare module factors.\n",
    "\n",
    "        startup_schedule: tuple[float] Startup investment fractions per year \n",
    "        (e.g. (0.5, 0.5) for 50% capital investment in the first year and 50%\n",
    "        investment in the second).\n",
    "\n",
    "        WC_over_FCI: [float] Working capital as a fraction of fixed capital investment.\n",
    "\n",
    "        labor_cost: [float] Total labor cost (USD/yr).\n",
    "\n",
    "        fringe_benefits: [float] Cost of fringe benefits as a fraction of labor cost.\n",
    "\n",
    "        property_tax: [float] Fee as a fraction of fixed capital investment.\n",
    "\n",
    "        property_insurance: [float] Fee as a fraction of fixed capital investment.    \n",
    "\n",
    "        supplies: [float] Yearly fee as a fraction of labor cost.\n",
    "\n",
    "        maintenance: [float] Yearly fee as a fraction of fixed capital investment.\n",
    "\n",
    "        administration: [float] Yearly fee as a fraction of fixed capital investment.\n",
    "\n",
    "    References\n",
    "    \n",
    "        [1] Huang, H., Long, S., & Singh, V. (2016). Techno-economic analysis of biodiesel\n",
    "        and ethanol co-production from lipid-producing sugarcane. Biofuels, Bioproducts\n",
    "        and Biorefining, 10(3), 299â€“315. https://doi.org/10.1002/bbb.1640\n",
    "    \n",
    "    \"\"\"\n",
    "    \n",
    "    def __init__(self, system, IRR, duration, depreciation, income_tax,\n",
    "                 operating_days, lang_factor, construction_schedule, WC_over_FCI,\n",
    "                 labor_cost, fringe_benefits, property_tax,\n",
    "                 property_insurance, supplies, maintenance, administration):\n",
    "        # Huang et. al. does not take into account financing or startup\n",
    "        # so these parameters are 0 by default\n",
    "        super().__init__(system, IRR, duration, depreciation, income_tax,\n",
    "                         operating_days, lang_factor, construction_schedule,\n",
    "                         startup_months=0, startup_FOCfrac=0, startup_VOCfrac=0,\n",
    "                         startup_salesfrac=0, finance_interest=0, finance_years=0, \n",
    "                         finance_fraction=0, WC_over_FCI=WC_over_FCI)\n",
    "        self.labor_cost = labor_cost\n",
    "        self.fringe_benefits = fringe_benefits\n",
    "        self.property_tax = property_tax\n",
    "        self.property_insurance = property_insurance\n",
    "        self.supplies= supplies\n",
    "        self.maintenance = maintenance\n",
    "        self.administration = administration\n",
    "        \n",
    "    # The abstract _TDC method should take direct permanent investment\n",
    "    # and return the total depreciable capital. Huang et. al. assume \n",
    "    # these values are equal\n",
    "    def _TDC(self, DPI):\n",
    "        return DPI\n",
    "    \n",
    "    # The abstract _FCI method should take total depreciable capital\n",
    "    # and return the fixed capital investment. Again, Huang et. al.  \n",
    "    # assume these values are equal.\n",
    "    def _FCI(self, TDC):\n",
    "        return TDC\n",
    "    \n",
    "    # The abstract _FOC method should take fixed capital investment\n",
    "    # and return the fixed operating cost.\n",
    "    def _FOC(self, FCI):\n",
    "        return (FCI*(self.property_tax + self.property_insurance\n",
    "                     + self.maintenance + self.administration)\n",
    "                + self.labor_cost*(1+self.fringe_benefits+self.supplies))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Perform cash flow analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Create a TEA object from a system:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "LipidcaneTEA: lipid_cane_system\n",
      " NPV: 6.45e+07 USD at 15.0% IRR\n",
      " ROI: 0.183 1/yr\n",
      " PBP: 5.19 yr\n"
     ]
    }
   ],
   "source": [
    "from biosteam.biorefineries import lipidcane as lc\n",
    "\n",
    "lipidcane_tea = LipidcaneTEA(system=lc.lipidcane_sys,\n",
    "                             IRR=0.15,\n",
    "                             duration=(2018, 2038),\n",
    "                             depreciation='MACRS7',\n",
    "                             income_tax=0.35,\n",
    "                             operating_days=200,\n",
    "                             lang_factor=3,\n",
    "                             construction_schedule=(0.4, 0.6),\n",
    "                             WC_over_FCI=0.05,\n",
    "                             labor_cost=2.5e6,\n",
    "                             fringe_benefits=0.4,\n",
    "                             property_tax=0.001,\n",
    "                             property_insurance=0.005,\n",
    "                             supplies=0.20,\n",
    "                             maintenance=0.01,\n",
    "                             administration=0.005)\n",
    "\n",
    "lipidcane_tea.show() # Print TEA summary at current options"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Retrieve complete cashflow analysis as a DataFrame object:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Depreciable capital</th>\n",
       "      <th>Fixed capital investment</th>\n",
       "      <th>Working capital</th>\n",
       "      <th>Depreciation</th>\n",
       "      <th>Loan</th>\n",
       "      <th>...</th>\n",
       "      <th>Net earnings</th>\n",
       "      <th>Cash flow</th>\n",
       "      <th>Discount factor</th>\n",
       "      <th>Net present value (NPV)</th>\n",
       "      <th>Cumulative NPV</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2016</th>\n",
       "      <td>8.13e+07</td>\n",
       "      <td>8.13e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>-8.13e+07</td>\n",
       "      <td>1.15</td>\n",
       "      <td>-9.35e+07</td>\n",
       "      <td>-9.35e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017</th>\n",
       "      <td>1.22e+08</td>\n",
       "      <td>1.22e+08</td>\n",
       "      <td>1.02e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.32e+08</td>\n",
       "      <td>1</td>\n",
       "      <td>-1.32e+08</td>\n",
       "      <td>-2.26e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.91e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.03e+07</td>\n",
       "      <td>4.93e+07</td>\n",
       "      <td>0.87</td>\n",
       "      <td>4.29e+07</td>\n",
       "      <td>-1.83e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.98e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>6.77e+06</td>\n",
       "      <td>5.66e+07</td>\n",
       "      <td>0.756</td>\n",
       "      <td>4.28e+07</td>\n",
       "      <td>-1.4e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3.56e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.6e+07</td>\n",
       "      <td>5.16e+07</td>\n",
       "      <td>0.658</td>\n",
       "      <td>3.39e+07</td>\n",
       "      <td>-1.06e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.54e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.26e+07</td>\n",
       "      <td>4.8e+07</td>\n",
       "      <td>0.572</td>\n",
       "      <td>2.75e+07</td>\n",
       "      <td>-7.87e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.82e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.73e+07</td>\n",
       "      <td>4.55e+07</td>\n",
       "      <td>0.497</td>\n",
       "      <td>2.26e+07</td>\n",
       "      <td>-5.6e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.81e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.73e+07</td>\n",
       "      <td>4.55e+07</td>\n",
       "      <td>0.432</td>\n",
       "      <td>1.97e+07</td>\n",
       "      <td>-3.64e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.82e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.73e+07</td>\n",
       "      <td>4.55e+07</td>\n",
       "      <td>0.376</td>\n",
       "      <td>1.71e+07</td>\n",
       "      <td>-1.93e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2025</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9.07e+06</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.32e+07</td>\n",
       "      <td>4.23e+07</td>\n",
       "      <td>0.327</td>\n",
       "      <td>1.38e+07</td>\n",
       "      <td>-5.44e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2026</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.284</td>\n",
       "      <td>1.11e+07</td>\n",
       "      <td>5.68e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2027</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.247</td>\n",
       "      <td>9.67e+06</td>\n",
       "      <td>1.54e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2028</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.215</td>\n",
       "      <td>8.41e+06</td>\n",
       "      <td>2.38e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2029</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.187</td>\n",
       "      <td>7.31e+06</td>\n",
       "      <td>3.11e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2030</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.163</td>\n",
       "      <td>6.36e+06</td>\n",
       "      <td>3.74e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2031</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.141</td>\n",
       "      <td>5.53e+06</td>\n",
       "      <td>4.3e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2032</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.123</td>\n",
       "      <td>4.81e+06</td>\n",
       "      <td>4.78e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2033</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.107</td>\n",
       "      <td>4.18e+06</td>\n",
       "      <td>5.2e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2034</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.0929</td>\n",
       "      <td>3.64e+06</td>\n",
       "      <td>5.56e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2035</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.0808</td>\n",
       "      <td>3.16e+06</td>\n",
       "      <td>5.88e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2036</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.0703</td>\n",
       "      <td>2.75e+06</td>\n",
       "      <td>6.15e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2037</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.02e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>4.93e+07</td>\n",
       "      <td>0.0611</td>\n",
       "      <td>3.01e+06</td>\n",
       "      <td>6.45e+07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>22 rows Ã— 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Depreciable capital  Fixed capital investment  Working capital  \\\n",
       "2016             8.13e+07                  8.13e+07                0   \n",
       "2017             1.22e+08                  1.22e+08         1.02e+07   \n",
       "2018                    0                         0                0   \n",
       "2019                    0                         0                0   \n",
       "2020                    0                         0                0   \n",
       "2021                    0                         0                0   \n",
       "2022                    0                         0                0   \n",
       "2023                    0                         0                0   \n",
       "2024                    0                         0                0   \n",
       "2025                    0                         0                0   \n",
       "2026                    0                         0                0   \n",
       "2027                    0                         0                0   \n",
       "2028                    0                         0                0   \n",
       "2029                    0                         0                0   \n",
       "2030                    0                         0                0   \n",
       "2031                    0                         0                0   \n",
       "2032                    0                         0                0   \n",
       "2033                    0                         0                0   \n",
       "2034                    0                         0                0   \n",
       "2035                    0                         0                0   \n",
       "2036                    0                         0                0   \n",
       "2037                    0                         0        -1.02e+07   \n",
       "\n",
       "      Depreciation  Loan       ...        Net earnings  Cash flow  \\\n",
       "2016             0     0       ...                   0  -8.13e+07   \n",
       "2017             0     0       ...                   0  -1.32e+08   \n",
       "2018      2.91e+07     0       ...            2.03e+07   4.93e+07   \n",
       "2019      4.98e+07     0       ...            6.77e+06   5.66e+07   \n",
       "2020      3.56e+07     0       ...             1.6e+07   5.16e+07   \n",
       "2021      2.54e+07     0       ...            2.26e+07    4.8e+07   \n",
       "2022      1.82e+07     0       ...            2.73e+07   4.55e+07   \n",
       "2023      1.81e+07     0       ...            2.73e+07   4.55e+07   \n",
       "2024      1.82e+07     0       ...            2.73e+07   4.55e+07   \n",
       "2025      9.07e+06     0       ...            3.32e+07   4.23e+07   \n",
       "2026             0     0       ...            3.91e+07   3.91e+07   \n",
       "2027             0     0       ...            3.91e+07   3.91e+07   \n",
       "2028             0     0       ...            3.91e+07   3.91e+07   \n",
       "2029             0     0       ...            3.91e+07   3.91e+07   \n",
       "2030             0     0       ...            3.91e+07   3.91e+07   \n",
       "2031             0     0       ...            3.91e+07   3.91e+07   \n",
       "2032             0     0       ...            3.91e+07   3.91e+07   \n",
       "2033             0     0       ...            3.91e+07   3.91e+07   \n",
       "2034             0     0       ...            3.91e+07   3.91e+07   \n",
       "2035             0     0       ...            3.91e+07   3.91e+07   \n",
       "2036             0     0       ...            3.91e+07   3.91e+07   \n",
       "2037             0     0       ...            3.91e+07   4.93e+07   \n",
       "\n",
       "      Discount factor  Net present value (NPV)  Cumulative NPV  \n",
       "2016             1.15                -9.35e+07       -9.35e+07  \n",
       "2017                1                -1.32e+08       -2.26e+08  \n",
       "2018             0.87                 4.29e+07       -1.83e+08  \n",
       "2019            0.756                 4.28e+07        -1.4e+08  \n",
       "2020            0.658                 3.39e+07       -1.06e+08  \n",
       "2021            0.572                 2.75e+07       -7.87e+07  \n",
       "2022            0.497                 2.26e+07        -5.6e+07  \n",
       "2023            0.432                 1.97e+07       -3.64e+07  \n",
       "2024            0.376                 1.71e+07       -1.93e+07  \n",
       "2025            0.327                 1.38e+07       -5.44e+06  \n",
       "2026            0.284                 1.11e+07        5.68e+06  \n",
       "2027            0.247                 9.67e+06        1.54e+07  \n",
       "2028            0.215                 8.41e+06        2.38e+07  \n",
       "2029            0.187                 7.31e+06        3.11e+07  \n",
       "2030            0.163                 6.36e+06        3.74e+07  \n",
       "2031            0.141                 5.53e+06         4.3e+07  \n",
       "2032            0.123                 4.81e+06        4.78e+07  \n",
       "2033            0.107                 4.18e+06         5.2e+07  \n",
       "2034           0.0929                 3.64e+06        5.56e+07  \n",
       "2035           0.0808                 3.16e+06        5.88e+07  \n",
       "2036           0.0703                 2.75e+06        6.15e+07  \n",
       "2037           0.0611                 3.01e+06        6.45e+07  \n",
       "\n",
       "[22 rows x 15 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lipidcane_tea.get_cashflow()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Find production cost, price, and IRR"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Find production cost:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([23325917.293, 30425272.193])"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lipidcane_tea.production_cost(bst.find('ethanol'), bst.find('biodiesel'))# USD/yr"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Solve for the price of a stream at the break even point:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.04446239974906339"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feed = bst.find('lipid_cane')\n",
    "lipidcane_tea.solve_price(feed) # USD/kg"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Solve for the IRR at the break even point:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "LipidcaneTEA: lipid_cane_system\n",
      " NPV: -2.2e-05 USD at 20.0% IRR\n",
      " ROI: 0.183 1/yr\n",
      " PBP: 5.19 yr\n"
     ]
    }
   ],
   "source": [
    "lipidcane_tea.IRR = lipidcane_tea.solve_IRR()\n",
    "lipidcane_tea.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that the cashflow table is created up to date:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Depreciable capital</th>\n",
       "      <th>Fixed capital investment</th>\n",
       "      <th>Working capital</th>\n",
       "      <th>Depreciation</th>\n",
       "      <th>Loan</th>\n",
       "      <th>...</th>\n",
       "      <th>Net earnings</th>\n",
       "      <th>Cash flow</th>\n",
       "      <th>Discount factor</th>\n",
       "      <th>Net present value (NPV)</th>\n",
       "      <th>Cumulative NPV</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2016</th>\n",
       "      <td>8.13e+07</td>\n",
       "      <td>8.13e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>-8.13e+07</td>\n",
       "      <td>1.2</td>\n",
       "      <td>-9.76e+07</td>\n",
       "      <td>-9.76e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017</th>\n",
       "      <td>1.22e+08</td>\n",
       "      <td>1.22e+08</td>\n",
       "      <td>1.02e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.32e+08</td>\n",
       "      <td>1</td>\n",
       "      <td>-1.32e+08</td>\n",
       "      <td>-2.3e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.91e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.03e+07</td>\n",
       "      <td>4.93e+07</td>\n",
       "      <td>0.833</td>\n",
       "      <td>4.11e+07</td>\n",
       "      <td>-1.89e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.98e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>6.77e+06</td>\n",
       "      <td>5.66e+07</td>\n",
       "      <td>0.694</td>\n",
       "      <td>3.93e+07</td>\n",
       "      <td>-1.49e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3.56e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.6e+07</td>\n",
       "      <td>5.16e+07</td>\n",
       "      <td>0.578</td>\n",
       "      <td>2.98e+07</td>\n",
       "      <td>-1.2e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.54e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.26e+07</td>\n",
       "      <td>4.8e+07</td>\n",
       "      <td>0.482</td>\n",
       "      <td>2.31e+07</td>\n",
       "      <td>-9.65e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.82e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.73e+07</td>\n",
       "      <td>4.55e+07</td>\n",
       "      <td>0.401</td>\n",
       "      <td>1.83e+07</td>\n",
       "      <td>-7.82e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.81e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.73e+07</td>\n",
       "      <td>4.55e+07</td>\n",
       "      <td>0.334</td>\n",
       "      <td>1.52e+07</td>\n",
       "      <td>-6.3e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.82e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.73e+07</td>\n",
       "      <td>4.55e+07</td>\n",
       "      <td>0.279</td>\n",
       "      <td>1.27e+07</td>\n",
       "      <td>-5.03e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2025</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9.07e+06</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.32e+07</td>\n",
       "      <td>4.23e+07</td>\n",
       "      <td>0.232</td>\n",
       "      <td>9.82e+06</td>\n",
       "      <td>-4.05e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2026</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.193</td>\n",
       "      <td>7.57e+06</td>\n",
       "      <td>-3.3e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2027</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.161</td>\n",
       "      <td>6.3e+06</td>\n",
       "      <td>-2.67e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2028</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.134</td>\n",
       "      <td>5.25e+06</td>\n",
       "      <td>-2.14e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2029</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.112</td>\n",
       "      <td>4.37e+06</td>\n",
       "      <td>-1.7e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2030</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.0931</td>\n",
       "      <td>3.64e+06</td>\n",
       "      <td>-1.34e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2031</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.0776</td>\n",
       "      <td>3.04e+06</td>\n",
       "      <td>-1.04e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2032</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.0646</td>\n",
       "      <td>2.53e+06</td>\n",
       "      <td>-7.82e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2033</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.0538</td>\n",
       "      <td>2.11e+06</td>\n",
       "      <td>-5.72e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2034</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.0449</td>\n",
       "      <td>1.76e+06</td>\n",
       "      <td>-3.96e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2035</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.0374</td>\n",
       "      <td>1.46e+06</td>\n",
       "      <td>-2.5e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2036</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>0.0311</td>\n",
       "      <td>1.22e+06</td>\n",
       "      <td>-1.28e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2037</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.02e+07</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.91e+07</td>\n",
       "      <td>4.93e+07</td>\n",
       "      <td>0.0259</td>\n",
       "      <td>1.28e+06</td>\n",
       "      <td>-2.21e-05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>22 rows Ã— 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Depreciable capital  Fixed capital investment  Working capital  \\\n",
       "2016             8.13e+07                  8.13e+07                0   \n",
       "2017             1.22e+08                  1.22e+08         1.02e+07   \n",
       "2018                    0                         0                0   \n",
       "2019                    0                         0                0   \n",
       "2020                    0                         0                0   \n",
       "2021                    0                         0                0   \n",
       "2022                    0                         0                0   \n",
       "2023                    0                         0                0   \n",
       "2024                    0                         0                0   \n",
       "2025                    0                         0                0   \n",
       "2026                    0                         0                0   \n",
       "2027                    0                         0                0   \n",
       "2028                    0                         0                0   \n",
       "2029                    0                         0                0   \n",
       "2030                    0                         0                0   \n",
       "2031                    0                         0                0   \n",
       "2032                    0                         0                0   \n",
       "2033                    0                         0                0   \n",
       "2034                    0                         0                0   \n",
       "2035                    0                         0                0   \n",
       "2036                    0                         0                0   \n",
       "2037                    0                         0        -1.02e+07   \n",
       "\n",
       "      Depreciation  Loan       ...        Net earnings  Cash flow  \\\n",
       "2016             0     0       ...                   0  -8.13e+07   \n",
       "2017             0     0       ...                   0  -1.32e+08   \n",
       "2018      2.91e+07     0       ...            2.03e+07   4.93e+07   \n",
       "2019      4.98e+07     0       ...            6.77e+06   5.66e+07   \n",
       "2020      3.56e+07     0       ...             1.6e+07   5.16e+07   \n",
       "2021      2.54e+07     0       ...            2.26e+07    4.8e+07   \n",
       "2022      1.82e+07     0       ...            2.73e+07   4.55e+07   \n",
       "2023      1.81e+07     0       ...            2.73e+07   4.55e+07   \n",
       "2024      1.82e+07     0       ...            2.73e+07   4.55e+07   \n",
       "2025      9.07e+06     0       ...            3.32e+07   4.23e+07   \n",
       "2026             0     0       ...            3.91e+07   3.91e+07   \n",
       "2027             0     0       ...            3.91e+07   3.91e+07   \n",
       "2028             0     0       ...            3.91e+07   3.91e+07   \n",
       "2029             0     0       ...            3.91e+07   3.91e+07   \n",
       "2030             0     0       ...            3.91e+07   3.91e+07   \n",
       "2031             0     0       ...            3.91e+07   3.91e+07   \n",
       "2032             0     0       ...            3.91e+07   3.91e+07   \n",
       "2033             0     0       ...            3.91e+07   3.91e+07   \n",
       "2034             0     0       ...            3.91e+07   3.91e+07   \n",
       "2035             0     0       ...            3.91e+07   3.91e+07   \n",
       "2036             0     0       ...            3.91e+07   3.91e+07   \n",
       "2037             0     0       ...            3.91e+07   4.93e+07   \n",
       "\n",
       "      Discount factor  Net present value (NPV)  Cumulative NPV  \n",
       "2016              1.2                -9.76e+07       -9.76e+07  \n",
       "2017                1                -1.32e+08        -2.3e+08  \n",
       "2018            0.833                 4.11e+07       -1.89e+08  \n",
       "2019            0.694                 3.93e+07       -1.49e+08  \n",
       "2020            0.578                 2.98e+07        -1.2e+08  \n",
       "2021            0.482                 2.31e+07       -9.65e+07  \n",
       "2022            0.401                 1.83e+07       -7.82e+07  \n",
       "2023            0.334                 1.52e+07        -6.3e+07  \n",
       "2024            0.279                 1.27e+07       -5.03e+07  \n",
       "2025            0.232                 9.82e+06       -4.05e+07  \n",
       "2026            0.193                 7.57e+06        -3.3e+07  \n",
       "2027            0.161                  6.3e+06       -2.67e+07  \n",
       "2028            0.134                 5.25e+06       -2.14e+07  \n",
       "2029            0.112                 4.37e+06        -1.7e+07  \n",
       "2030           0.0931                 3.64e+06       -1.34e+07  \n",
       "2031           0.0776                 3.04e+06       -1.04e+07  \n",
       "2032           0.0646                 2.53e+06       -7.82e+06  \n",
       "2033           0.0538                 2.11e+06       -5.72e+06  \n",
       "2034           0.0449                 1.76e+06       -3.96e+06  \n",
       "2035           0.0374                 1.46e+06        -2.5e+06  \n",
       "2036           0.0311                 1.22e+06       -1.28e+06  \n",
       "2037           0.0259                 1.28e+06       -2.21e-05  \n",
       "\n",
       "[22 rows x 15 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lipidcane_tea.get_cashflow()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### System report"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Save stream tables, utility requirements, itemized costs, TEA results, and a cash flow table:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Try this on your computer and open excel\n",
    "lc.lipidcane_sys.save_report('Lipidcane report.xlsx')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
