{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# MixedStream\n",
    "### Multi-phase streams with liquid-LIQUID, and vapor-liquid equilibrium."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "MixedStream is an extention of Stream with 's' (solid), 'l' (liquid), 'L' (LIQUID), and 'g' (gas) flow rates. The upper case 'LIQUID' denotes that it is a distinct phase than 'liquid'. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Creating MixedStream Objects"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Before initializing MixedStream objects, first set the species:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from biosteam import MixedStream as MStream\n",
    "from biosteam import Species\n",
    "\n",
    "MStream.species = Species('Water', 'Ethanol')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To initialize, you can set flow rates for different phases:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MixedStream: ms1\n",
      " phase: 'lg', T: 351 K, P: 101325 Pa\n",
      "        \u001b[37m\u001b[22m species  kmol/hr\u001b[0m\n",
      " liquid: Ethanol  1\n",
      "\n",
      " vapor:  Ethanol  2\n"
     ]
    }
   ],
   "source": [
    "ms1 = MStream(ID='ms1', liquid_flow=[1], vapor_flow=[2],\n",
    "              species=['Ethanol'], units='kmol/hr', T=351, P=101325)\n",
    "ms1.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can also assume the same order as given in the Species object by not specifying the species:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MixedStream: ms2\n",
      " phase: 'lg', T: 370 K, P: 101325 Pa\n",
      "        \u001b[37m\u001b[22m species  kmol/hr\u001b[0m\n",
      " liquid: Water    1\n",
      "         Ethanol  2\n",
      "\n",
      " vapor:  Water    2\n",
      "         Ethanol  1\n"
     ]
    }
   ],
   "source": [
    "# The default units is kmol/hr and default P is 101325 Pa\n",
    "ms2 = MStream(ID='ms2', liquid_flow=[1, 2], vapor_flow=[2, 1], T=370)\n",
    "ms2.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can **view** flow rates differently by setting the units for show."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MixedStream: ms1\n",
      " phase: 'lg', T: 77.85 degC, P: 101325 Pa\n",
      "        \u001b[37m\u001b[22m species  kg/hr\u001b[0m\n",
      " liquid: Ethanol  46.1\n",
      "\n",
      " vapor:  Ethanol  92.1\n"
     ]
    }
   ],
   "source": [
    "ms1.show(flow='kg/hr', T='degC')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Getting and Setting Flow Rates"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Flow rates are stored in solid_mol, liquid_mol, LIQUID_mol, and vapor_mol arrays."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "material_array([0., 0.])\u001b[37m\u001b[22m (kmol/hr)\u001b[0m"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ms1.solid_mol"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "material_array([0., 1.])\u001b[37m\u001b[22m (kmol/hr)\u001b[0m"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ms1.liquid_mol"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "material_array([0., 0.])\u001b[37m\u001b[22m (kmol/hr)\u001b[0m"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ms1.LIQUID_mol"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "material_array([0., 2.])\u001b[37m\u001b[22m (kmol/hr)\u001b[0m"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ms1.vapor_mol"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Assign flows using these properties:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MixedStream: ms1\n",
      " phase: 'lg', T: 351 K, P: 101325 Pa\n",
      "        \u001b[37m\u001b[22m species  kmol/hr\u001b[0m\n",
      " liquid: Water    2\n",
      "         Ethanol  1\n",
      "\n",
      " vapor:  Ethanol  3\n"
     ]
    }
   ],
   "source": [
    "ms1.liquid_mol = [2, 1]\n",
    "ms1.vapor_mol[1] = 3\n",
    "ms1.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Mass and volumetric flow rates are also availabe as [property_array](https://array-collections.readthedocs.io/en/latest/property_array.html) objects"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "property_array([36.031, 46.068])\u001b[37m\u001b[22m (kg/hr)\u001b[0m"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ms1.liquid_mass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "property_array([0.037, 0.063])\u001b[37m\u001b[22m (m^3/hr)\u001b[0m"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ms1.liquid_vol"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Assign flows through the mass or vol property arrays:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MixedStream: ms1\n",
      " phase: 'lg', T: 351 K, P: 101325 Pa\n",
      "        \u001b[37m\u001b[22m species  kmol/hr\u001b[0m\n",
      " liquid: Water    2\n",
      "         Ethanol  1\n",
      "\n",
      " vapor:  Water    0.555\n",
      "         Ethanol  3\n"
     ]
    }
   ],
   "source": [
    "# Set gas phase specie flow rate by index\n",
    "ms1.vapor_mass[0] = 10\n",
    "ms1.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MixedStream: ms1\n",
      " phase: 'lg', T: 351 K, P: 101325 Pa\n",
      "        \u001b[37m\u001b[22m species  kmol/hr\u001b[0m\n",
      " liquid: Water    5.39\n",
      "         Ethanol  3.19\n",
      "\n",
      " vapor:  Water    0.555\n",
      "         Ethanol  3\n"
     ]
    }
   ],
   "source": [
    "# Set liquid phase flow rates assuming same order as in species object\n",
    "ms1.liquid_vol[:] = [0.1, 0.2]\n",
    "ms1.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Single Phase Flow Properties:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Add 'net' to get the net flow rate "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "8.581060526320748"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ms1.liquid_molnet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "148.20532"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ms1.vapor_massnet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ms1.solid_volnet"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Add 'frac' to get the composition"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tuple_array([0.156, 0.844])"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ms1.vapor_molfrac"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tuple_array([0.398, 0.602])"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ms1.liquid_massfrac"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tuple_array([0.5, 0.5])"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ms1.solid_volfrac"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`Note: When a phase has no flow rate, all specie fractions will be equal.`"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Overall Flow Properties:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tuple_array([5.944, 6.192])"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ms1.mol"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tuple_array([107.085, 285.257])"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ms1.mass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tuple_array([15.821831898239994, 84.2115640153857], dtype=object)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ms1.vol"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`Note: Overall flow rate properties 'molnet', 'massnet', 'volnet', 'molfrac', 'massfrac', and 'volfrac' are also available`"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Material and Thermodynamic Properties"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Access the same properties as Stream objects:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "204334.2743237495"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ms1.H # Enthalpy (kJ/hr) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3.9221069813948026"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ms1.rho # Density (kg/m3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A dictionary of units of measure is available:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'MW': 'g/mol', 'mass': 'kg/hr', 'mol': 'kmol/hr', 'vol': 'm^3/hr', 'massnet': 'kg/hr', 'molnet': 'kmol/hr', 'volnet': 'm^3/hr', 'massfrac': 'kg/kg', 'molfrac': 'kmol/kmol', 'volfrac': 'm^3/m^3', 'T': 'K', 'P': 'Pa', 'H': 'kJ/hr', 'S': 'kJ/hr', 'G': 'kJ/hr', 'U': 'kJ/hr', 'A': 'kJ/hr', 'Hf': 'kJ/hr', 'C': 'kJ/K/hr', 'Vm': 'm^3/mol', 'Cpm': 'J/mol/K', 'Cp': 'J/g/K', 'rho': 'kg/m^3', 'rhom': 'mol/m^3', 'nu': 'm^2/s', 'mu': 'Pa*s', 'sigma': 'N/m', 'k': 'W/m/K', 'alpha': 'm^2/s'}\n"
     ]
    }
   ],
   "source": [
    "print(ms1.units) # See documentation for more information"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Vapor-Liquid Equilibrium"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "MixedStream objects can be used to calculate vapor-liquid equilibrium."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Adiabatic and isobaric conditions:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MixedStream: ms2\n",
      " phase: 'lg', T: 354.02 K, P: 101325 Pa\n",
      "        \u001b[37m\u001b[22m species  kmol/hr\u001b[0m\n",
      " liquid: Water    1.72\n",
      "         Ethanol  1.02\n",
      "\n",
      " vapor:  Water    1.28\n",
      "         Ethanol  1.98\n"
     ]
    }
   ],
   "source": [
    "ms2.VLE()\n",
    "ms2.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Isothermal and isobaric conditions:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MixedStream: ms2\n",
      " phase: 'lg', T: 355 K, P: 101325 Pa\n",
      "        \u001b[37m\u001b[22m species  kmol/hr\u001b[0m\n",
      " liquid: Water    1.07\n",
      "         Ethanol  0.418\n",
      "\n",
      " vapor:  Water    1.93\n",
      "         Ethanol  2.58\n"
     ]
    }
   ],
   "source": [
    "ms2.VLE(T=355)\n",
    "ms2.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Contant vapor fraction and isobaric conditions:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MixedStream: ms2\n",
      " phase: 'lg', T: 353.88 K, P: 101325 Pa\n",
      "        \u001b[37m\u001b[22m species  kmol/hr\u001b[0m\n",
      " liquid: Water    1.84\n",
      "         Ethanol  1.16\n",
      "\n",
      " vapor:  Water    1.16\n",
      "         Ethanol  1.84\n"
     ]
    }
   ],
   "source": [
    "ms2.VLE(V=0.5)\n",
    "ms2.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`Note: It is also possible to set light and heave keys that are not used to calculate equilibrium. Please see documentation for more information.`"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Liquid-LIQUID Equilibrium"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "MixedStream objects can also be used to calculate liquid-LIQUID equilibrium"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MixedStream: ms3\n",
      " phase: 'l', T: 298.15 K, P: 101325 Pa\n",
      "        \u001b[37m\u001b[22m species  kmol/hr\u001b[0m\n",
      " liquid: Water    2\n",
      "         Octane   2\n"
     ]
    }
   ],
   "source": [
    "# Make stream with hydrophobic species\n",
    "ms3 = MStream('ms3', liquid_flow=[2, 2],\n",
    "              species=Species(['Water', 'Octane']))\n",
    "ms3.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Adiabatic and isobaric conditions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MixedStream: ms3\n",
      " phase: 'lL', T: 298.15 K, P: 101325 Pa\n",
      "        \u001b[37m\u001b[22m species  kmol/hr\u001b[0m\n",
      " liquid: Water    1.98\n",
      "         Octane   2.49e-05\n",
      "\n",
      " LIQUID: Water    0.0167\n",
      "         Octane   2\n"
     ]
    }
   ],
   "source": [
    "# Must set liquid-LIQUID guess splits\n",
    "ms3.LLE() \n",
    "ms3.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`Note: LLE assumes no significat temperature change with phase partitioning, resulting in constant temperature.`"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Isothermal and isobaric conditions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MixedStream: ms3\n",
      " phase: 'lL', T: 340 K, P: 101325 Pa\n",
      "        \u001b[37m\u001b[22m species  kmol/hr\u001b[0m\n",
      " liquid: Water    1.94\n",
      "         Octane   5.37e-05\n",
      "\n",
      " LIQUID: Water    0.0627\n",
      "         Octane   2\n"
     ]
    }
   ],
   "source": [
    "# Must set liquid-LIQUID guess splits\n",
    "ms3.LLE(T=340) \n",
    "ms3.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
